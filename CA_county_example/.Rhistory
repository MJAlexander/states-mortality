states <- list.files("~/Downloads/lifetables/States") # does not exist on github! need to download
lt <- c()
for(i in 1:length(states)){
folder_path <- paste0("./data/lifetables/States/",states[i])
state_both <- read_csv(paste0(folder_path, "/", states[i], "_bltper_1x1.csv"))
lt <- rbind(lt, state_both)
rm(state_both)
}
states <- list.files("~/Downloads/lifetables/States") # does not exist on github! need to download
lt <- c()
folder_path <- paste0("~/Downloads/lifetables/States/",states[i])
for(i in 1:length(states)){
folder_path <- paste0("~/Downloads/lifetables/States/",states[i])
state_both <- read_csv(paste0(folder_path, "/", states[i], "_bltper_1x1.csv"))
lt <- rbind(lt, state_both)
rm(state_both)
}
library(tidyverse)
states <- list.files("~/Downloads/lifetables/States") # does not exist on github! need to download
lt <- c()
for(i in 1:length(states)){
folder_path <- paste0("~/Downloads/lifetables/States/",states[i])
state_both <- read_csv(paste0(folder_path, "/", states[i], "_bltper_1x1.csv"))
lt <- rbind(lt, state_both)
rm(state_both)
}
lt_group <- lt %>%
mutate(age = as.numeric(as.character(Age))) %>%
mutate(age = ifelse(is.na(age), 110, age)) %>%
mutate(age_group = cut(age, age_levels, age_labels, include.lowest = TRUE, right = FALSE)) %>%
group_by(PopName, Year, age_group) %>%
summarise(qx = 1-prod(1-qx))
lt
setwd("~/src/states-mortality/CA_county_example/")
# load in packages and functions
library(tidyverse)
library(rjags)
library(R2jags)
source("./code/functions/F_traceplot.R") # function to make traceplots of posterior samples
source("./code/functions/derive_lifetable_values.R") # function to calculate life expectancy etc
# read in deaths data and clean up
d <- read_csv("./data/CA.csv")
d <- d %>%
rename(county = County,
code = `County Code`,
age_group = `Age Group`,
year = Year,
deaths = Deaths,
pop = Population)
d <- d %>%
filter(age_group!= "Not Stated", county!="Sierra County, CA") %>%
rowwise() %>%
mutate(age = ifelse(age_group== "< 1 year", 0,
ifelse(age_group == "85+ years", 85,
as.numeric(strsplit(age_group, "-")[[1]][1]))),
mx = deaths/pop)
View(d)
lt
age_levels <- c(0, 1, seq(5, 25, by = 5), seq(35,85, by = 10), 110)
age_labels <- c("<1", "1-4 years", "5-9 years", "10-14 years", "15-19 years", "20-24 years", "25-34 years", "35-44 years", "45-54 years", "55-64 years", "65-74 years", "75-84 years", "85+")
lt_group <- lt %>%
mutate(age = as.numeric(as.character(Age))) %>%
mutate(age = ifelse(is.na(age), 110, age)) %>%
mutate(age_group = cut(age, age_levels, age_labels, include.lowest = TRUE, right = FALSE)) %>%
group_by(PopName, Year, age_group) %>%
summarise(qx = 1-prod(1-qx))
lt_group <- lt_group %>%
rowwise() %>%
mutate(age = ifelse(as.character(age_group)== "<1", 0,
ifelse(as.character(age_group) == "85+", 85,
as.numeric(strsplit(as.character(age_group), "-")[[1]][1])))) %>%
group_by(PopName, Year) %>%
mutate(n = lead(age, default = 100) - age,
ax = n/2)
lt_group <- lt_group %>%
left_join(
lt %>%
filter(Age==0) %>%
mutate(age = as.numeric(Age)) %>%
select(PopName, Year, age, ax) %>%
rename(ax_first = ax)
) %>%
mutate(ax = ifelse(age ==0, ax_first, ax)) %>%
select(-ax_first)
lt_group <- lt_group %>%
mutate(mx = qx / (n - qx*(n - ax)))
m.ga <- lt_group %>%
select(-age, -qx, -n, -ax) %>%
ungroup() %>%
spread(age_group, mx)  %>%
select(-Year, -PopName) %>%
as.matrix()
log_m.ga <- log(m.ga)
log_m.ga <- log_m.ga[-which(is.infinite(log_m.ga), arr.ind = T)[,1],]
pcs <-svd(log_m.ga)$v[,1:3]
plot(pcs[, 1], type = "o")
plot(pcs[, 2], type = "o")
plot(pcs[, 3], type = "o")
unique(d$age_group)
unique(d$age)
