tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(tidyverse)
penguins
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(tidyverse)
penguins
dim(penguins)
penguins %>%
drop_na(flipper_length_mm) %>%
drop_na(body_mass_g)
penguins %>%
summarize(mean_flipper = mean(flipper_length_mm),
sd_flipper = sd(flipper_length_mm))
penguins %>%
summarize(mean_body = mean(body_mass_g),
sd_body = sd(body_mass_g))
ggplot(data = penguins %>% drop_na(species), aes(flipper_length_mm, fill = species)) + geom_histogram(position = 'dodge') + ylab("Count") + xlab("Flipper Length") + labs(title = "Flipper Length by Species")
penguins_adelie <- penguins %>%
filter(species=="Adelie")
penguins_chinstrap <- penguins %>%
filter(species=="Chinstrap")
penguins_gentoo <- penguins %>%
filter(species=="Gentoo")
nrow(penguins_adelie)
nrow(penguins_chinstrap)
nrow(penguins_gentoo)
ggplot(data = penguins %>% drop_na(species), aes(flipper_length_mm, body_mass_g, color = species)) + geom_point() +
ggtitle("Body Mass of Penguins Against Flipper Length by Species")+
theme_bw(base_size = 14)+
ylab("Body Mass") + xlab("Fliipper Length") + scale_color_viridis_d()
penguins_use <- penguins %>% drop_na()
penguins_use
penguins_use <- penguins_use%>%
mutate(covar_xy = (flipper_length_mm - mean(flipper_length_mm))*(body_mass_g - mean(body_mass_g)),
var_x = (flipper_length_mm - mean(flipper_length_mm))^2)
penguins_use %>% select(body_mass_g,flipper_length_mm,covar_xy,var_x)
reg_coeffs <- penguins_use %>%
summarise(beta_1 = sum(covar_xy)/sum(var_x),
beta_0 = mean(body_mass_g) - beta_1*mean(flipper_length_mm))
beta_0 <-reg_coeffs$beta_0
beta_1 <-reg_coeffs$beta_1
reg_coeffs %>% select(beta_0, beta_1)
penguins_use <- penguins_use %>%
mutate(Yhat = beta_0 + beta_1*flipper_length_mm,
ehat = body_mass_g - Yhat,
Yhat_Ybar_diff_squared = (Yhat - mean(body_mass_g))^2,
ehat_squared = ehat^2)
penguins_use %>%
summarise(SSM = sum(Yhat_Ybar_diff_squared),
SSR = sum(ehat_squared),
SST = SSM + SSR,
R_sq = SSM/SST)
bodymass_flipper_model <- lm(formula = body_mass_g ~ flipper_length_mm, data = penguins_use)
bodymass_flipper_model
summary(bodymass_flipper_model)
penguins_use %>%
summarize(mean(flipper_length_mm),
sd_flipper = sd(flipper_length_mm))
penguins_use <- penguins_use %>%
mutate(flipper_c = flipper_length_mm - mean(flipper_length_mm))
bodymass_flipper_c_model <- lm(formula = body_mass_g ~ flipper_c, data = penguins_use)
bodymass_flipper_c_model
summary(bodymass_flipper_c_model)
ggplot(penguins_use, aes(flipper_length_mm, body_mass_g)) +
geom_point() +
geom_abline(intercept = beta_0, slope = beta_1, color = "red") +
ggtitle("Body Mass Against Flipper Length")+
ylab("Body Mass") + xlab("Fliipper Length")
beta_0_c <-coef(bodymass_flipper_c_model)[1]
beta_0_c
beta_0_c + beta_1*14
beta_0_c + beta_1*-10
ehat <- resid(bodymass_flipper_c_model)
ehat
ggplot(penguins_use, aes(flipper_c, ehat)) +
geom_point() +
ggtitle("Body Mass Residuals Against Mean-Centered Flipper Length")+
ylab("Body Mass Residuals") + xlab("Mean-Centered Flipper Length") +
geom_abline(slope = 0, intercept = 0, color = "red", lwd = 0.5)
penguins_use %>%
select(flipper_c, ehat) %>%
summarise(correlation = cor(flipper_c, ehat))
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(tidyverse)
penguins
dim(penguins)
penguins %>%
drop_na(flipper_length_mm) %>%
drop_na(body_mass_g)
penguins %>%
summarize(mean_flipper = mean(flipper_length_mm),
sd_flipper = sd(flipper_length_mm))
penguins %>%
summarize(mean_body = mean(body_mass_g),
sd_body = sd(body_mass_g))
ggplot(data = penguins %>% drop_na(species), aes(flipper_length_mm, fill = species)) + geom_histogram(position = 'dodge') + ylab("Count") + xlab("Flipper Length") + labs(title = "Flipper Length by Species")
penguins_adelie <- penguins %>%
filter(species=="Adelie")
penguins_chinstrap <- penguins %>%
filter(species=="Chinstrap")
penguins_gentoo <- penguins %>%
filter(species=="Gentoo")
nrow(penguins_adelie)
nrow(penguins_chinstrap)
nrow(penguins_gentoo)
ggplot(data = penguins %>% drop_na(species), aes(flipper_length_mm, body_mass_g, color = species)) + geom_point() +
ggtitle("Body Mass of Penguins Against Flipper Length by Species")+
theme_bw(base_size = 14)+
ylab("Body Mass") + xlab("Fliipper Length") + scale_color_viridis_d()
penguins_use <- penguins %>% drop_na()
penguins_use
penguins_use <- penguins_use%>%
mutate(covar_xy = (flipper_length_mm - mean(flipper_length_mm))*(body_mass_g - mean(body_mass_g)),
var_x = (flipper_length_mm - mean(flipper_length_mm))^2)
penguins_use %>% select(body_mass_g,flipper_length_mm,covar_xy,var_x)
reg_coeffs <- penguins_use %>%
summarise(beta_1 = sum(covar_xy)/sum(var_x),
beta_0 = mean(body_mass_g) - beta_1*mean(flipper_length_mm))
beta_0 <-reg_coeffs$beta_0
beta_1 <-reg_coeffs$beta_1
reg_coeffs %>% select(beta_0, beta_1)
penguins_use <- penguins_use %>%
mutate(Yhat = beta_0 + beta_1*flipper_length_mm,
ehat = body_mass_g - Yhat,
Yhat_Ybar_diff_squared = (Yhat - mean(body_mass_g))^2,
ehat_squared = ehat^2)
penguins_use %>%
summarise(SSM = sum(Yhat_Ybar_diff_squared),
SSR = sum(ehat_squared),
SST = SSM + SSR,
R_sq = SSM/SST)
bodymass_flipper_model <- lm(formula = body_mass_g ~ flipper_length_mm, data = penguins_use)
bodymass_flipper_model
summary(bodymass_flipper_model)
penguins_use %>%
summarize(mean(flipper_length_mm),
sd_flipper = sd(flipper_length_mm))
penguins_use <- penguins_use %>%
mutate(flipper_c = flipper_length_mm - mean(flipper_length_mm))
bodymass_flipper_c_model <- lm(formula = body_mass_g ~ flipper_c, data = penguins_use)
bodymass_flipper_c_model
summary(bodymass_flipper_c_model)
ggplot(penguins_use, aes(flipper_length_mm, body_mass_g)) +
geom_point() +
geom_abline(intercept = beta_0, slope = beta_1, color = "red") +
ggtitle("Body Mass Against Flipper Length")+
ylab("Body Mass") + xlab("Fliipper Length")
beta_0_c <-coef(bodymass_flipper_c_model)[1]
beta_0_c
beta_0_c + beta_1*14
beta_0_c + beta_1*-10
ehat <- resid(bodymass_flipper_c_model)
ehat
ggplot(penguins_use, aes(flipper_c, ehat)) +
geom_point() +
ggtitle("Body Mass Residuals Against Mean-Centered Flipper Length")+
ylab("Body Mass Residuals") + xlab("Mean-Centered Flipper Length") +
geom_abline(slope = 0, intercept = 0, color = "red", lwd = 0.5)
penguins_use %>%
select(flipper_c, ehat) %>%
summarise(correlation = cor(flipper_c, ehat))
library(rstan)
x_mean <- 3.14
N <- 10
y <- rnorm(N)
data_list <- list(
y = y,
N = N
)
my_fit <- stan(
"rstan_troubleshooting.stan",
data = data_list,
iter = 1000,
refresh = 1000,
chains = 1
)
my_fit <- stan(
"~/Desktop/rstan_troubleshooting.stan",
data = data_list,
iter = 1000,
refresh = 1000,
chains = 1
)
source("~/Desktop/rstan_troubleshooting.R")
capabilities()
output:
pdf_document:
latex_engine: xelatex
---
knitr::opts_chunk$set(echo = TRUE, dev="cairo_pdf")
library(LexisPlotR)
install.packages("LexisPlotR")
library(LexisPlotR)
lexis_grid(year_start = 1970, year_end = 2020, age_start = 0, age_end = 50, delta = 5) %>%
lexis_age(age = 5, delta = 5)
library(LexisPlotR)
library(tidyverse)
lexis_grid(year_start = 1970, year_end = 2020, age_start = 0, age_end = 50, delta = 5) %>%
lexis_age(age = 5, delta = 5)
knitr::opts_chunk$set(echo = FALSE, dev="cairo_pdf", message = FALSE, warning = FALSE)
lexis_grid(year_start = 1970, year_end = 2020, age_start = 0, age_end = 50, delta = 5) %>%
lexis_cohort(cohort = 1970, delta = 5)
setwd("~/Dropbox/Projects/babynames_app/")
library(shiny)
library(tidyverse)
library(shinydashboard)
library(shinyWidgets)
library(ozbabynames)
library(babynames)
# ontario data
d <- read_csv("ontario_top_baby_names_male_1917-2018_en_fr.csv")
# tidy up data
d <- d %>% janitor::clean_names() %>%
rename(name = name_nom, year = year_annee, frequency = frequency_frequence) %>%
mutate(name = str_to_title(name)) %>%
group_by(year) %>%
mutate(prop = frequency/sum(frequency)) %>%
filter(year>1989)
ozbabynames <- ozbabynames %>%
group_by(name, sex, year) %>%
summarise(count = sum(count)) %>%
filter(count>1, name!="(Not") %>%
group_by(sex, year) %>%
mutate(prop = count/sum(count)) %>%
filter(year>1989)
ozbabynames <- ozbabynames %>%
group_by(name, sex, year) %>%
summarise(count = sum(count)) %>%
filter(count>4, name!="(Not") %>%
group_by(sex, year) %>%
mutate(prop = count/sum(count)) %>%
filter(year>1989)
babynames <- babynames %>%
mutate(sex = ifelse(sex=="F", "Female", "Male")) %>%
filter(year>1989, count>50)
babynames <- babynames %>%
mutate(sex = ifelse(sex=="F", "Female", "Male")) %>%
filter(year>1989, n>50)
girls_names <- c(unique(ozbabynames$name[ozbabynames$sex=="Female"]), unique(babynames$name[babynames$sex=="Female"]))
boys_names <- c(unique(ozbabynames$name[ozbabynames$sex=="Male"]), unique(babynames$name[babynames$sex=="Male"]))
runApp()
ui <- dashboardPage(
dashboardHeader(title = "Trends of baby names for Australia, Ontario and the USA", titleWidth = 600),
dashboardSidebar(
sidebarMenu(
menuItem("Trends", tabName = "Trends", icon = icon("th")),
menuItem("About", tabName = "About", icon = icon("info"))
)
),
dashboardBody(
setBackgroundColor(color = "white", shinydashboard = TRUE),
tabItems(
# First tab content
tabItem(tabName = "Trends",
h2("Trends over time"),
fluidRow(
box(
width = 10, solidHeader = FALSE, status = "primary",
"Select name(s), gender and geography below to show trends in name popularity over time"
)),
sidebarLayout(
sidebarPanel(
selectizeInput(inputId = 'name',
label = "Name",
choices = c(boys_names, girls_names))
),
# Show a plot of time series
mainPanel(
plotOutput("TrendPlot")
)
)
),
# Final tab content
tabItem(tabName = "About",
h2("About this project"),
fluidRow(
box(
width = 9, solidHeader = FALSE, status = "primary",
HTML("This app shows the preliminary results of a projection model of foster care outcomes by state in the United States.",
'<br/>', '<br/>', "The projections are based on a Bayesian hirerchical state space model. In brief, foster care entries are modeled as a function of a set of demographic, socioeconomic, health and welfare variables (shown in the 'Covariates' tab). The association between each of the variables is allowed to vary across geography (census division) and time. See technical write-up for more model details.",
'<br/>', '<br/>', "The app itself is also in preliminary stages!")
)))
)
)
)
runApp()
lkm\
shiny::runApp()
library(shiny)
library(tidyverse)
library(shinydashboard)
library(shinyWidgets)
library(ozbabynames)
library(babynames)
# ontario data
d <- read_csv("ontario_top_baby_names_male_1917-2018_en_fr.csv")
# tidy up data
d <- d %>% janitor::clean_names() %>%
rename(name = name_nom, year = year_annee, frequency = frequency_frequence) %>%
mutate(name = str_to_title(name)) %>%
group_by(year) %>%
mutate(prop = frequency/sum(frequency)) %>%
filter(year>1989)
ozbabynames <- ozbabynames %>%
group_by(name, sex, year) %>%
summarise(count = sum(count)) %>%
filter(count>4, name!="(Not") %>%
group_by(year) %>%
mutate(prop = count/sum(count)) %>%
filter(year>1989)
babynames <- babynames %>%
mutate(sex = ifelse(sex=="F", "Female", "Male")) %>%
filter(year>1989, n>50) %>%
group_by(name, year) %>%
summarise(n = sum(n)) %>%
group_by(year) %>%
mutate(prop = n/sum(n))
possible_names <- c(unique(ozbabynames$name), unique(babynames$name))
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(tidyverse)
library(shinydashboard)
library(shinyWidgets)
library(ozbabynames)
library(babynames)
# ontario data
d <- read_csv("ontario_top_baby_names_male_1917-2018_en_fr.csv")
# tidy up data
d <- d %>% janitor::clean_names() %>%
rename(name = name_nom, year = year_annee, frequency = frequency_frequence) %>%
mutate(name = str_to_title(name)) %>%
group_by(year) %>%
mutate(prop = frequency/sum(frequency)) %>%
filter(year>1989)
ozbabynames <- ozbabynames %>%
group_by(name, sex, year) %>%
summarise(count = sum(count)) %>%
filter(count>4, name!="(Not") %>%
group_by(sex, year) %>%
mutate(prop = count/sum(count)) %>%
filter(year>1989)
babynames <- babynames %>%
mutate(sex = ifelse(sex=="F", "Female", "Male")) %>%
filter(year>1989, n>50) # %>%
# group_by(name, year) %>%
# summarise(n = sum(n)) %>%
# group_by(year) %>%
# mutate(prop = n/sum(n))
possible_names <- c(unique(ozbabynames$name), unique(babynames$name), unique(d$name))
View(ozbabynames)
runApp()
babynames %>%
filter(name %in% c("Nina")) %>%
ggplot(aes(year, prop*100, color = name, lty = sex)) + geom_line() +
ggtitle("USA popularity")
runApp()
runApp()
runApp()
library(shiny)
library(tidyverse)
library(shinydashboard)
library(shinyWidgets)
library(ozbabynames)
library(babynames)
# ontario data
d <- read_csv("ontario_top_baby_names_male_1917-2018_en_fr.csv")
# tidy up data
d <- d %>% janitor::clean_names() %>%
rename(name = name_nom, year = year_annee, frequency = frequency_frequence) %>%
mutate(name = str_to_title(name)) %>%
group_by(year) %>%
mutate(prop = frequency/sum(frequency)) %>%
filter(year>1989)
ozbabynames_2 <- ozbabynames %>%
group_by(name, sex, year) %>%
summarise(count = sum(count)) %>%
filter(count>4, name!="(Not") %>%
group_by(sex, year) %>%
mutate(prop = count/sum(count)) %>%
filter(year>1989)
babynames_2 <- babynames %>%
mutate(sex = ifelse(sex=="F", "Female", "Male")) %>%
filter(year>1989, n>50) # %>%
# group_by(name, year) %>%
# summarise(n = sum(n)) %>%
# group_by(year) %>%
# mutate(prop = n/sum(n))
View(d)
View(babynames_2)
View(ozbabynames_2)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
